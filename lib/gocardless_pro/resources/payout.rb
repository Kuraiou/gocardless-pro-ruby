

# encoding: utf-8
#
# WARNING: Do not edit by hand, this file was generated by Crank:
#
#   https://github.com/gocardless/crank
#
require 'uri'

module GoCardlessPro
  # A module containing classes for each of the resources in the GC Api
  module Resources
    # Payouts represent transfers from GoCardless to a
    # [creditor](https://developer.gocardless.com/pro/2015-04-29/#api-endpoints-creditors).
    # Each payout contains the funds collected from one or many
    # [payments](https://developer.gocardless.com/pro/2015-04-29/#api-endpoints-payments).
    # Payouts are created automatically after a payment has been successfully
    # collected.
    # Represents an instance of a payout resource returned from the API
    class Payout
      attr_reader :amount

      attr_reader :created_at

      attr_reader :currency

      attr_reader :id

      attr_reader :reference

      attr_reader :status
      # initialize a resource instance
      # @param object [Hash] an object returned from the API
      def initialize(object)
        @object = object

        @amount = object['amount']
        @created_at = object['created_at']
        @currency = object['currency']
        @id = object['id']
        @links = object['links']
        @reference = object['reference']
        @status = object['status']
      end

      # return the links that the resource has
      def links
        Struct.new(
          *{

            creditor: '',

            creditor_bank_account: ''

          }.keys.sort
        ).new(*@links.sort.map(&:last))
      end

      # Provides the resource as a hash of all it's readable attributes
      def to_h
        @object
      end
    end
  end
end
